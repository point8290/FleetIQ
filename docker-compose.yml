services:
  configsvr1:
    image: mongo:8.0.10
    command:
      [
        "mongod",
        "--configsvr",
        "--replSet",
        "rs-config",
        "--port",
        "27019",
        "--bind_ip_all",
      ]
    ports:
      - "27019:27019"
    volumes:
      - ./db/mongo.conf:/etc/mongo.conf
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--port",
          "27019",
          "--eval",
          "db.adminCommand('ping')",
        ]
      interval: 5s
      timeout: 3s
      retries: 5

  configsvr2:
    image: mongo:8.0.10
    command:
      [
        "mongod",
        "--configsvr",
        "--replSet",
        "rs-config",
        "--port",
        "27020",
        "--bind_ip_all",
      ]
    ports:
      - "27020:27020"
    volumes:
      - ./db/mongo.conf:/etc/mongo.conf
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--port",
          "27020",
          "--eval",
          "db.adminCommand('ping')",
        ]
      interval: 5s
      timeout: 3s
      retries: 5

  configsvr3:
    image: mongo:8.0.10
    command:
      [
        "mongod",
        "--configsvr",
        "--replSet",
        "rs-config",
        "--port",
        "27021",
        "--bind_ip_all",
      ]
    ports:
      - "27021:27021"
    volumes:
      - ./db/mongo.conf:/etc/mongo.conf
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--port",
          "27021",
          "--eval",
          "db.adminCommand('ping')",
        ]
      interval: 5s
      timeout: 3s
      retries: 5

  shard1-1:
    image: mongo:8.0.10
    command:
      [
        "mongod",
        "--shardsvr",
        "--replSet",
        "rs-shard-1",
        "--port",
        "27018",
        "--bind_ip_all",
      ]
    ports:
      - "27018:27018"
    volumes:
      - ./db/mongo.conf:/etc/mongo.conf
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--port",
          "27018",
          "--eval",
          "db.adminCommand('ping')",
        ]
      interval: 5s
      timeout: 3s
      retries: 5

  shard1-2:
    image: mongo:8.0.10
    command:
      [
        "mongod",
        "--shardsvr",
        "--replSet",
        "rs-shard-1",
        "--port",
        "27022",
        "--bind_ip_all",
      ]
    ports:
      - "27022:27022"
    volumes:
      - ./db/mongo.conf:/etc/mongo.conf
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--port",
          "27022",
          "--eval",
          "db.adminCommand('ping')",
        ]
      interval: 5s
      timeout: 3s
      retries: 5

  shard1-3:
    image: mongo:8.0.10
    command:
      [
        "mongod",
        "--shardsvr",
        "--replSet",
        "rs-shard-1",
        "--port",
        "27023",
        "--bind_ip_all",
      ]
    ports:
      - "27023:27023"
    volumes:
      - ./db/mongo.conf:/etc/mongo.conf
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--port",
          "27023",
          "--eval",
          "db.adminCommand('ping')",
        ]
      interval: 5s
      timeout: 3s
      retries: 5

  replicaset-init:
    image: mongo:8.0.10
    depends_on:
      configsvr1: { condition: service_healthy }
      configsvr2: { condition: service_healthy }
      configsvr3: { condition: service_healthy }
      shard1-1: { condition: service_healthy }
      shard1-2: { condition: service_healthy }
      shard1-3: { condition: service_healthy }
    entrypoint: >
      bash -c '
        echo "‚è≥ waiting 20‚ÄØs for mongod healthchecks‚Ä¶" && sleep 20 &&

        echo "üîß init rs-config" &&
        mongosh --host configsvr1 --port 27019 --eval "
          rs.initiate({
            _id: \"rs-config\",
            configsvr: true,
            members: [
              { _id: 0, host: \"configsvr1:27019\" },
              { _id: 1, host: \"configsvr2:27020\" },
              { _id: 2, host: \"configsvr3:27021\" }
            ]
          })
        " &&

        echo "üîß init rs-shard‚Äë1" &&
        mongosh --host shard1-1 --port 27018 --eval "
          rs.initiate({
            _id: \"rs-shard-1\",
            members: [
              { _id: 0, host: \"shard1-1:27018\" },
              { _id: 1, host: \"shard1-2:27022\" },
              { _id: 2, host: \"shard1-3:27023\" }
            ]
          })
        "
      '

  mongos:
    image: mongo:8.0.10
    depends_on:
      replicaset-init: { condition: service_completed_successfully }
    restart: on-failure # <‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ NEW
    command: >
      mongos --configdb rs-config/configsvr1:27019,configsvr2:27020,configsvr3:27021
            --port 27017 --bind_ip_all
    healthcheck:
      test:
        [
          "CMD",
          "mongosh",
          "--port",
          "27017",
          "--eval",
          "db.adminCommand('ping')",
        ]
      interval: 5s
      timeout: 3s
      retries: 5

  add-shard:
    image: mongo:8.0.10
    depends_on:
      mongos: { condition: service_healthy }
    entrypoint: >
      bash -c '
        echo "‚è≥ waiting for mongos to elect itself primary‚Ä¶" && sleep 5 &&
        mongosh --host mongos --eval "sh.addShard(\"rs-shard-1/shard1-1:27018\")"
      '

  api:
    build:
      context: ./api
      target: builder
    command: npm run dev
    volumes:
      - ./api/src:/usr/src/app/src
      - /usr/src/app/node_modules
    env_file:
      - ./api/.env
    depends_on:
      mongos:
        condition: service_healthy
    ports:
      - "3000:3000"
